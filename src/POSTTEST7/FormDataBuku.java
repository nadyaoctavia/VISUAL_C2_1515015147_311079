/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package POSTTEST7;

import java.sql.*; // untuk mengimport data dari sql ke java / mengkonekan data sql ke java
import javax.swing.JOptionPane; // untuk membuat sebuah peringatan
import javax.swing.table.DefaultTableModel; 

/**
 *
 * @author nadyaocta
 */
public class FormDataBuku extends javax.swing.JFrame {
private DefaultTableModel model;
private Connection con=koneksi.getConnection(); // untuk mengkonekan sql
private Statement stt; // mengeksekusi query yang static
private ResultSet rss; // untuk mengeksekusi berhasil atau tidak
private PreparedStatement pst; 
    /**
     * Creates new form FormDataBuku
     */
    public FormDataBuku() {
        initComponents();
        
    }
    
    private void InitTable(){ // membuat tabel baru
        model = new DefaultTableModel(); //instansiasi class model dari class DefaultTableModel
        model.addColumn("ID BUKU"); // menambahkan kolom id buku ke class model
        model.addColumn("JUDUL"); // menambahkan kolom judul ke class model
        model.addColumn("PENULIS"); // menambahkan kolom penulis ke class model
        model.addColumn("HARGA"); // menambahkan kolom harga ke class model
        
        tabel.setModel(model); //mengeset instance of class model ke tabel
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tjudul = new javax.swing.JTextField();
        tharga = new javax.swing.JTextField();
        tpenulis = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        keluar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        pencarian = new javax.swing.JComboBox();
        simpan = new javax.swing.JButton();
        update = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        ulangi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setText("FORM DATA BUKU");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setText("Judul");

        jLabel3.setText("Penulis");

        jLabel4.setText("Harga");

        tjudul.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tjudulCaretUpdate(evt);
            }
        });
        tjudul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tjudulActionPerformed(evt);
            }
        });

        tharga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                thargaKeyPressed(evt);
            }
        });

        tpenulis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tere Liye", "W.S Rendra", "Felix Siauw", "Asma Nadia", "Dewi Lestari" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tpenulis, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tjudul, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                    .addComponent(tharga))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tjudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tpenulis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tharga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Judul", "Penulis", "Harga"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        keluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/exit.png"))); // NOI18N
        keluar.setText("Keluar");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        jLabel5.setText("Search:");

        search.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                searchCaretUpdate(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyTyped(evt);
            }
        });

        jLabel6.setText("By:");

        pencarian.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Judul", "Penulis", "Harga", " " }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(keluar)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(pencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keluar)
                .addGap(27, 27, 27))
        );

        simpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/save.png"))); // NOI18N
        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/refresh.png"))); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        hapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/delete.png"))); // NOI18N
        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        ulangi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/refresh.png"))); // NOI18N
        ulangi.setText("Refresh");
        ulangi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ulangiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(ulangi, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(simpan)
                    .addComponent(update)
                    .addComponent(hapus)
                    .addComponent(ulangi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tjudulCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tjudulCaretUpdate
        // TODO add your handling code here:

    }//GEN-LAST:event_tjudulCaretUpdate

    private void TampilData(){ // membuat method Tampildata
        try{
            String sql = "SELECT * FROM buku";
            stt = con.createStatement(); // membuat statement atau konekan ke database
            rss = stt.executeQuery(sql); // eksekusi query
            while(rss.next()){ // perulangan untuk menampilkan data
            Object[] data = new Object[4]; //membuat objek baru yaitu data dengan jumlah array 4
            data[0] = rss.getString("id"); // objek data pada larik ke-0 yaitu mengambil nilai dari stt berupa id
            data[1] = rss.getString("judul"); // objek data pada larik ke-1 yaitu mengambil nilai dari stt berupa judul
            data[2] = rss.getString("penulis"); // objek data pada larik ke-2 yaitu mengambil nilai dari stt berupa penulis
            data[3] = rss.getInt("harga"); // objek data pada larik ke-3 yaitu mengambil nilai dari stt berupa harga
            model.addRow(data);
            }
        }catch(SQLException e){ // memanipulasi error
            System.out.println("ini error"); // menampilkan pesan ini error
        }
    }
    
   public boolean UbahData(String id, String judul, String penulis, String harga){ // membuat method ubahdata dengan parameter id, judul, penulis, harga dengan tipe data string
       try {
            //mendeklarasikan variabel sql dengan query untuk mengupdate data judul, penulis, harga berdasarkan id sesuai data tersebut
            String sql = "UPDATE buku SET judul='"+judul
                    +"',penulis='"+penulis+"',harga="+harga
                    +" WHERE id="+id+";";

            stt = con.createStatement();//pembuatan statement
            stt.executeUpdate(sql);//eksekusi query
            return true; //mengembalikan nilai true 
        } catch (SQLException e) {
             System.out.println(e.getMessage());
             return false; //mengembalikan nilai false
        }
    }
    private boolean validasi(String judul, String penulis){ //method untuk validasi data agar tidak boleh sama
        try {
            stt = con.createStatement(); //untuk konek ke database atau membuat konekan baru 
            String sql = "SELECT * FROM buku WHERE judul='"+judul+"' and penulis='"+penulis+"'"; //mendeklarasikan variabel sql dengan query untuk menampilkan data sesuai kondisi judul dan penulis yang ditentukan
            rss = stt.executeQuery(sql); //untuk mengeksekusi query
            //kondisi untuk menampilkan hasil dan nilai pengembaliannya
            if(rss.next()) 
                return true; //mengembalikan nilai benar
            else 
                return false;//mengembalikan nilai salah
        } catch (SQLException e) { // memanipulasi kesalahan/ error
            System.out.print("ini error"); // dengan menampilkan ini error
            return false; //mengembalikan nilai salah
        }
    }
    public boolean HapusData(String id){ // membuat method untuk hapus data 
        try{
            
            String sql = "DELETE FROM buku WHERE id="+id+";"; // deklarasikan variabel sql untuk menghapus data dengan kondisi id
            stt = con.createStatement(); // konekan ke database
            stt.executeQuery(sql); 
            return true; // mengembalikan nilai benar
             }catch(SQLException e){ // memanipulasi kesalahan
            System.out.println("ini error"); // menampilkan ini error
            return false; // mengembalikan nilai salah
        }
    }
    private void tjudulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tjudulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tjudulActionPerformed

    private void thargaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_thargaKeyPressed
        // TODO add your handling code here:
//        harga.addKeyListener(new KeyAdapter() {
//            public void keyTyped(KeyEvent e){
//                char karakter = e.getKeyChar();
//                if(((karakter < '0') || (karakter > '9')) && (karakter != '.')){
//                    e.consume();
//                }
//            }
//
//        });
    }//GEN-LAST:event_thargaKeyPressed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
          if (tjudul.getText().length()!=0 && tharga.getText().length()!=0) { //penyeleksian kondisi jika textfield judul dan harga tidak kosong
            String judul = tjudul.getText(); //mendeklarasikan judul sesuai dengan texfield judul
            String penulis = tpenulis.getSelectedItem().toString();//mendeklarasikan penulis sesuai dengan combobox penulis
            String harga = tharga.getText(); //mendeklarasikan harga sesuai dengan texfield harga
            
            if(validasi(judul,penulis)){ //penyeleksian kondisi yang diambil dari fungsi validasi dengan parameter judul dan penulis
                JOptionPane.showMessageDialog(this, "Sudah pernah diinput");
            }
            else{// jika tidak 
            TambahData(judul,penulis,harga); //menjalankan fungsi TambahData sesuai dengan parameter judul, penulis, harga
            InitTable();//menampilkan ulang model dari table buku
            TampilData();//untuk menampilkan ulang fungsi TampilData
            JOptionPane.showMessageDialog(this, "Berhasil Simpan Data"); // menampilkan berhasil simpan data
            }
        } 
        else { // jika tidak
        JOptionPane.showMessageDialog(this, "Isi Data Terlebih Dahulu"); // menampilkan isi data terlebih dahulu
        
        }
        
    }//GEN-LAST:event_simpanActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
  int baris = tabel.getSelectedRow();//mendekarasikan variabel baris sesuai data yang dipilih di tabel
        String id = tabel.getValueAt(baris, 0).toString(); //mendeklarasikan variabel id yang bernilai dari baris ke-0 dari tabel yang di konversi ke string
        String judul = tjudul.getText();//mendeklarasikan judul sesuai dengan texfield judul
        String penulis = tpenulis.getSelectedItem().toString();//mendeklarasikan penulis sesuai dengan combobox penulis
        String harga = tharga.getText();//mendeklarasikan harga sesuai dengan texfield harga
        String hargatabel = tabel.getValueAt(baris, 3).toString();
        
        int ok=JOptionPane.showConfirmDialog(this,"Update Data Yang Dipilih?","Confirmation Update",JOptionPane.YES_NO_OPTION);
        try {
            if(ok==0){
                if(validasi(judul,penulis)){//penyeleksian kondisi yang diambil dari fungsi validasi dengan parameter judul dan penulis
                     
                    if(harga.equals(hargatabel)){//jika harga di texfield harga sama dengan harga di tabel
                        JOptionPane.showMessageDialog(this, "Sudah pernah diinput");
                    }   
                    else{// jika tidak 
                        UbahData(id,judul,penulis,harga); //menjalankan fungsi UbahData sesuai dengan parameter id, judul, penulis, harga
                        InitTable();//menampilkan ulang model dari table buku
                        TampilData();//untuk menampilkan ulang fungsi TampilData
                        JOptionPane.showMessageDialog(this, "Berhasil Simpan Data");
                        }
                }
                else{ // jika tidak
                        UbahData(id,judul,penulis,harga); //menjalankan fungsi UbahData sesuai dengan parameter id, judul, penulis, harga
                        InitTable();//menampilkan ulang model dari table buku
                        TampilData();//untuk menampilkan ulang fungsi TampilData
                        JOptionPane.showMessageDialog(this, "Berhasil Simpan Data");
                }
                    }
            
        } catch (Exception e) { // memanipulasi kesalahan
            JOptionPane.showMessageDialog(this, "error"); // menampilkan error
        }
                    
    }//GEN-LAST:event_updateActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
   int baris = tabel.getSelectedRow(); //mendekarasikan variabel baris sesuai data yang dipilih di tabel
       String id = tabel.getValueAt(baris, 0).toString();//mendeklarasikan variabel id yang bernilai dari baris ke-0 dari tabel yang di konversi ke string
       
       int a = JOptionPane.showConfirmDialog(this, "Ingin Menghapus Data?","Confirm Hapus",JOptionPane.YES_NO_OPTION);
       if (a==0) // jika variabel a sama dengan bernilai 0
       {
        try
         {
            if(HapusData(id)) //Kondisi jika menjalankan fungsi HapusData dengan parameter id            
                JOptionPane.showMessageDialog(null, "Data Dengan"+"\nID : "+id+"\nJudul : "+tjudul.getText()+"\nPenulis : "+tpenulis.getSelectedItem()+"\nHarga : "+tharga.getText()+"\nBerhasil Dihapus");       
            else
                JOptionPane.showMessageDialog(null, "Gagal Hapus Data"); // menampilkan gagal hapus data
            InitTable();//menjalankan fungsi InitTable
            TampilData();//menjalankan TampilData
         }
        catch (Exception e) // memanipulasi kesalahan
        {
            JOptionPane.showMessageDialog(this, "Delete Data Gagal"); // menampilkan gagal hapus
        }
       }
    }//GEN-LAST:event_hapusActionPerformed

    private void ulangiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ulangiActionPerformed
        // TODO add your handling code here:
        tjudul.setText(""); // untuk mengkosongkan textfield judul
        tharga.setText(""); // untuk mengkosongkan textfield harga
        tpenulis.setSelectedItem(0); // untuk mengkosongkan combobox penulis dengan bernilai 0
        tjudul.requestFocus(); 
    }//GEN-LAST:event_ulangiActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        
        int baris = tabel.getSelectedRow();  //deklarasi variabel baris dengan nilai yang di klik pada tabel
         tjudul.setText(tabel.getValueAt(baris, 1).toString()); //mengeset nilai di textfield judul sesuai nilai dari baris ke-1 dari tabel yang dijadikan ke tipe data String
       tpenulis.setSelectedItem(tabel.getValueAt(baris, 2).toString()); //mengeset nilai di combobox penulis sesuai nilai dari baris ke-1 dari tabel yang dijadikan ke tipe data String
        tharga.setText(tabel.getValueAt(baris, 3).toString()); //mengeset nilai di textfield harga sesuai nilai dari baris ke-1 dari tabel yang dijadikan ke tipe data String

    }//GEN-LAST:event_tabelMouseClicked

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        // TODO add your handling code here:
        System.exit(0); // untuk keluar dari frame tersebut
    }//GEN-LAST:event_keluarActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        InitTable(); // menjalankan fungsi InitTable
        TampilData(); // menjalankan fungsi TampilData
       
    }//GEN-LAST:event_formComponentShown

   public void PencarianData(String by, String cari){ // membuat method pencariandata dengan parameter by dan cari dengan tipe data string
        try {
          
            String sql = "SELECT * FROM buku WHERE "+by+" LIKE '%"+cari+"%';";
            stt = con.createStatement();//pembuatan statement atau mengkonekan ke database
            rss = stt.executeQuery(sql);//eksekusi query
                while(rss.next()){//perulangan untuk menampilkan data
                    //menampilkan data sesuai array : 
                    Object[] data = new Object[4];//membuat objek baru yaitu data dengan jumlah array 4
                    data[0] = rss.getString("id");// objek data pada larik ke-0 yaitu mengambil nilai dari stt berupa id
                    data[1] = rss.getString("judul");//objek data pada larik ke-1 yaitu mengambil nilai dari stt berupa judul
                    data[2] = rss.getString("penulis");//objek data pada larik ke-2 yaitu mengambil nilai dari stt berupa penulis
                    data[3] = rss.getInt("harga");//objek data pada larik ke-3 yaitu mengambil nilai dari stt berupa harga
                    model.addRow(data);//menambah baris pada model sesuai nilai dari parameternya yaitu data
                }
        } catch (Exception e) { // memanipulasi kesalahan
            System.out.println("ini error"); //dengan menampilkan ini error
        }
    }
            
    private void searchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyTyped
        // TODO add your handling code here:
//                model.getDataVector().removeAllElements();
//        model.fireTableDataChanged();
//        String caridengan = pencarian.getSelectedItem().toString();
//        try {
//            
//             String sql="select * from buku where "+caridengan+" like '%"+search.getText()+"%'";
//           stt = con. createStatement();
//            rss = stt. executeQuery(sql);
//                       ResultSet rss=stt.executeQuery(sql);
//            while (rss.next()) {
//                Object[] o=new Object[3];
//                o[0]=rss.getString("JUDUL");
//                o[1]=rss.getString("PENULIS");
//                o[2]=rss.getString("HARGA");
//                
//
//            model.addRow(o);
//            }
//            stt.close();
//            rss.close();
//        }catch(SQLException e) {
//            System.out.println("Terjadi kesalahan");
//        }
    }//GEN-LAST:event_searchKeyTyped

    private void searchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_searchCaretUpdate
        // TODO add your handling code here:
        InitTable(); // menjalankan fungsi InitTable
        if(search.getText().length()==0){ //kondisi jika texfield search kosong
            TampilData(); // menjalankan fungsi TampilData
        }else{ // jika tidak
            PencarianData(pencarian.getSelectedItem().toString(), search.getText()); 
            // akan langsung menjalankan fungsi PencarianData dengan 2 parameter yaitu nilai dari combo pencarian yang dijadikan string dan nilai dari textfield search
        }
    }//GEN-LAST:event_searchCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDataBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDataBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDataBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDataBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDataBuku().setVisible(true);
            }
        });
    }
    public void TambahData(String judul, String penulis, String harga){ // membuat method TambahData dengan parameter judul, penulis, harga dengan tipe data string
        try{
            
            String sql = "INSERT INTO buku VALUES (NULL,'"+judul+"','"+penulis+"',"+harga+")"; //mendeklarasikan variabel sql dengan query untuk menginsert data judul, penulis, harga
            stt = con.createStatement();//pembuatan statement
            stt.executeUpdate(sql);//eksekusi query
            model.addRow(new Object[]{judul,penulis,harga});//menamabah data pada baris dengan parameter baru objek yaitu yang berisi parameter judul,penulis, dan harga
        }catch(SQLException e){ // memanipulasi error
            System.out.println("ini error"); // menampilkan pesan ini error
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton keluar;
    private javax.swing.JComboBox pencarian;
    private javax.swing.JTextField search;
    private javax.swing.JButton simpan;
    private javax.swing.JTable tabel;
    private javax.swing.JTextField tharga;
    private javax.swing.JTextField tjudul;
    private javax.swing.JComboBox tpenulis;
    private javax.swing.JButton ulangi;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
